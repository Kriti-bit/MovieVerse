{"version":3,"sources":["comps/ImageGrid.js","comps/Title.js","comps/Modal.js","App.js","index.js"],"names":["ImageGrid","props","useState","docs","setDocs","getMovieRequest","a","fetch","response","json","responseJson","results","useEffect","handleClick","e","setMovies","stopPropagation","className","map","movie","index","motion","div","key","id","layout","whileHover","opacity","onClick","img","src","poster_path","alt","initial","animate","transition","delay","style","margin","display","width","position","color","right","top","overflow","FormControlLabel","control","Checkbox","icon","checkedIcon","name","label","Title","Modal","selectedMovie","target","classList","contains","backdrop_path","y","original_title","release_date","vote_average","overview","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAwEeA,EAjEG,SAACC,GAAW,IAAD,EAEFC,mBAAS,IAFP,mBAElBC,EAFkB,KAEbC,EAFa,KAInBC,EAAe,uCAAG,8BAAAC,EAAA,iLAEHC,MAFG,2HAEpBC,EAFoB,gBAGCA,EAASC,OAHV,QAGpBC,EAHoB,QAKTC,SAChBP,EAAQM,EAAaC,SANI,2CAAH,qDAUxBC,qBAAU,WACTP,MACE,IAEA,IAAMQ,EAAc,SAACC,GACbb,EAAMc,UAAU,MAChBD,EAAEE,mBAGV,OAEI,yBAAKC,UAAU,YACXd,EAAKe,KAAI,SAACC,EAAOC,GAAR,OACN,kBAACC,EAAA,EAAOC,IAAR,CAAYL,UAAU,WAAWM,IAAKJ,EAAMK,GAC5CC,QAAM,EACNC,WAAY,CAAEC,QAAS,GACvBC,QAAW,kBAAK3B,EAAMc,UAAUI,KAE/B,kBAACE,EAAA,EAAOQ,IAAR,CAAYC,IAAK,mCAAmCX,EAAMY,YAAaC,IAAI,aACvEC,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,GACpBQ,WAAc,CAAEC,MAAO,KAG3B,yBAAKC,MAAO,CACRC,OAAQ,OACRC,QAAS,QACTC,MAAO,cACPC,SAAS,WACTC,MAAM,QACNC,MAAO,QACPC,IAAK,OACLC,SAAU,WAEVjB,QAASf,GACT,kBAACiC,EAAA,EAAD,CACIC,QAAS,kBAACC,EAAA,EAAD,CAAUC,KAAM,kBAAC,IAAD,MACzBC,YAAa,kBAAC,IAAD,MACbC,KAAK,aACLC,MAAM,YCjDfC,EATD,WACZ,OACE,yBAAKpC,UAAU,SACb,0CACA,yEC0BSqC,EA7BD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAexC,EAAgB,EAAhBA,UAQ3B,OACI,kBAACM,EAAA,EAAOC,IAAR,CAAYL,UAAU,WAAWW,QAPjB,SAACd,GACdA,EAAE0C,OAAOC,UAAUC,SAAS,aAC5B3C,EAAU,OAMTkB,QAAS,CAACN,QAAS,GACnBO,QAAS,CAACP,QAAS,IAEnB,kBAACN,EAAA,EAAOQ,IAAR,CAAYC,IAAK,mCAAmCyB,EAAcI,cAAe3B,IAAI,eACjFC,QAAS,CAAE2B,EAAG,UACd1B,QAAS,CAAE0B,EAAE,KAEjB,yBAAK3C,UAAU,iBACV,4BAAKsC,EAAcM,gBADxB,qBAEQ,wCAFR,IAE0BN,EAAcO,aAFxC,0DAE6H,sCAF7H,IAE6IP,EAAcQ,aACtJ,6BAAK,6BACLR,EAAcS,YCQhBC,EA3BH,WAAO,IAAD,EACkB/D,mBAAS,MAD3B,mBACVqD,EADU,KACKxC,EADL,KAiBjB,OAEG,yBAAKE,UAAU,OACb,kBAAC,EAAD,MACF,kBAAC,EAAD,CAAWF,UAAWA,IACpBwC,GAAiB,kBAAC,EAAD,CAAOA,cAAeA,EAAexC,UAAWA,MCtBvEmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f969e13e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst ImageGrid = (props) => {\r\n\r\n    const [docs,setDocs] = useState([])\r\n\r\n    const getMovieRequest = async () => {\r\n\t\tconst url = `https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US&page=1`;\r\n\t\tconst response = await fetch(url);\r\n\t\tconst responseJson = await response.json();\r\n\r\n\t\tif (responseJson.results) {\r\n\t\t\tsetDocs(responseJson.results);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetMovieRequest();\r\n\t}, []);\r\n\r\n    const handleClick = (e) => {\r\n            props.setMovies(null);\r\n            e.stopPropagation();\r\n        }\r\n    \r\n    return (\r\n\r\n        <div className=\"img-grid\">\r\n           {docs.map((movie, index) => (\r\n               <motion.div className=\"img-wrap\" key={movie.id}\r\n               layout\r\n               whileHover={{ opacity: 1}}\r\n               onClick = {()=> props.setMovies(movie)}\r\n               >\r\n                <motion.img src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path} alt=\"poster pic\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition = {{ delay: 1 }}\r\n                />\r\n\r\n                <div style={{\r\n                    margin: 'auto',\r\n                    display: 'block',\r\n                    width: 'fit-content',\r\n                    position:'absolute',\r\n                    color:'black',\r\n                    right: '-20px',\r\n                    top: '-5px',\r\n                    overflow: 'visible'\r\n                    }}\r\n                    onClick={handleClick}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox icon={<FavoriteBorder />}\r\n                        checkedIcon={<Favorite />}\r\n                        name=\"checkedH\" />}\r\n                        label=\"\"\r\n                    />\r\n                </div>\r\n               </motion.div> \r\n            ) ) }\r\n            \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>MovieVerse</h1>\n      <h2>A collection of the Most Popular Movies</h2>\n    </div>\n  )\n}\n\nexport default Title;","import React from 'react'\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({selectedMovie, setMovies }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n           setMovies(null); \r\n        }\r\n    }\r\n\r\n    return(\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1}}\r\n        >\r\n            <motion.img src={\"https://image.tmdb.org/t/p/w500/\"+selectedMovie.backdrop_path} alt=\"enlarged pic\" \r\n                initial={{ y: \"-100vh\" }}\r\n                animate={{ y:0}}\r\n            />\r\n            <div className=\"modal-content\">\r\n                 <h1>{selectedMovie.original_title}</h1>\r\n                 üóìÔ∏è<u>Released:</u> {selectedMovie.release_date}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ‚≠ê<u>Voting:</u> {selectedMovie.vote_average} \r\n                 <br/><br/>\r\n                {selectedMovie.overview}\r\n                \r\n            </div>\r\n        </motion.div>\r\n    )\r\n\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Title from './comps/Title'\nimport Modal from './comps/Modal'\n\nconst App = () => {\n\tconst [selectedMovie, setMovies] = useState(null);\n\n\t// const getMovieRequest = async () => {\n\t// \tconst url = `https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US&page=1`;\n\t// \tconst response = await fetch(url);\n\t// \tconst responseJson = await response.json();\n\n\t// \tif (responseJson.results) {\n\t// \t\tsetMovies(responseJson.results);\n\t// \t}\n\t// };\n\n\t// useEffect(() => {\n\t// \tgetMovieRequest();\n\t// }, []);\n\n\treturn (\n\t\t\n    <div className=\"App\">\n      <Title/>\n\t\t\t\t<ImageGrid setMovies={setMovies}/>\n\t\t\t\t{ selectedMovie && <Modal selectedMovie={selectedMovie} setMovies={setMovies}/>}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}